git init 初始化仓库
git remote set-url origin https://github.com/Jasonfloy/wsb.git 修改远程仓库地址
git remote add origin https://github.com/Jasonfloy/wsb.git 第一次添加远程仓库地址
git remote -v    									查看remote信息
git push origin --delete dev  						删除远程dev分支
git branch -d dev 									删除本地dev分支
git branch -D dev 									强行删除本地dev分支
git branch dev										本地创建分支
git checkout -b dev									本地创建并转换分支
git checkout -b dev origin/dev 						创建远程origin的dev分支到本地
git branch --set-upstream dev origin/dev			指定本地dev分支与远程origin/dev分支的链接
git branch -a										查看仓库所有分支
git checkout 文件名									撤销该文件的修改
git merge dev										在master分支上合并dev分支
git merge --no-ff -m "" dev							有历史记录的合并
git push origin master								把本地master分支的所有提交推送到远程仓库的对应分支上
git pull											拉取远程仓库与本分支对应分支的更新

git stash											把现在当前分支所做的改变暂存起来
git stash apply										恢复，stash中不删除
git stash pop										恢复同时删除stash中的内容
git stash list										查看stash中的内容
git stash apply stash@{0}							可以多次stash，恢复的时候先用list命令查看记录，然后用此命令来恢复到指定状态
git config --global  --list							查看配置信息（个人信息）
git config --local  --list							查看配置信息（本地仓库信息）
版本回退
git log							查看过去的提交
git log --pretty=oneline
git reflog  					查看此刻未来的提交
git reset --hard 3628164		3628164为查到的版本号

代码同步到本地：
（1）git clone https://git-amr-4.devtools.intel.com/gerrit/p/ds_data_factory_git-dd.git  第一次用clone，把远端全部弄到本地
（2）git fetch origin master 			fetch命令同步的代码不会合并到任何分支去，需要自己merge
（3）git pull origin master 			pull 命令则是相当于将 fetch 和 merge 这两个命令放在一起执行了，它可以从远程版 本库上获取最新的代码并且合并到本地，
	git pull <远程主机名> <远程分支名>:<本地分支名>
	git push <远程主机名> <本地分支名>:<远程分支名>

多人协作的工作模式：
1.首先，可以试图用git push origin branch-name推送自己的修改；
2.如果推送失败，则因为远程分支比你的本地更新，需要先用git pull试图合并；
3.如果合并有冲突，则解决冲突，并在本地提交；
4.没有冲突或者解决掉冲突后，再用git push origin branch-name推送就能成功！

最常用的命令和流程：
1.修改文件之后提交并推送到远端仓库
	//git add <路径>					后面可以跟目录或文件名（包括后缀）       git add -i    进入add菜单，选择revert子选项可以查看被修改，但是还没有被add的文件
	git add -A 					把当前目录下所有改过的文件添加到暂存区
	git commit -m "comment"    //comment是对版本的说明
	git push
